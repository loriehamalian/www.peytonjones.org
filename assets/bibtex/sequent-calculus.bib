@inproceedings{downen2016sequent,
author = {Downen, Paul and Maurer, Luke and Ariola, Zena and Peyton Jones, Simon},
title = {Sequent calculus as a compiler intermediate language},
booktitle = {International Conference on Functional Programming (ICFP'16)},
year = {2016},
month = {September},
abstract = {The lambda-calculus is popular as an intermediate language for practical compilers. But in the world of logic it has a lesser-known twin, born at the same time, called the sequent calculus. Perhaps that would be a good intermediate language, too? To explore this question we designed Sequent Core, a practically-oriented variant of sequent calculus, and used it to re-implement a substantial chunk of the Glasgow Haskell Compiler.},
publisher = {ACM},
url = {https://www.microsoft.com/en-us/research/publication/sequent-calculus-as-a-compiler-intermediate-language/},
pages = {74-88},
edition = {International Conference on Functional Programming (ICFP'16)},
}