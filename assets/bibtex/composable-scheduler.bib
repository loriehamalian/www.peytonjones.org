@article{sivaramakrishnan2016composable,
author = {Sivaramakrishnan, KC and Harris, Tim and Marlow, Simon and Peyton Jones, Simon},
title = {Composable Scheduler Activations for Haskell},
year = {2016},
month = {June},
abstract = {The runtime for a modern, concurrent, garbage collected language like Haskell is like an operating system: sophisticated, complex, performant, but alas very hard to change. If more of the runtime system were in Haskell it would become far more modular and malleable. In this paper we describe a new concurrency design that allows the scheduler for concurrent and parallel programs to be written in Haskell. In particular, this substrate allows new primitives to be constructed modularly, obviating the need to re-engineer or reason about the interactions with GHC's existing concurrency support.

 	Earlier conference version, rejected by the 2013 Haskell Symposium.
 	Code on GitHub

Â },
url = {https://www.microsoft.com/en-us/research/publication/composable-scheduler-activations-haskell/},
journal = {Journal of Functional Programming},
edition = {Journal of Functional Programming},
}